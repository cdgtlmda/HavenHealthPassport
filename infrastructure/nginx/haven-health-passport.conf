# HTTPS Server Configuration for Haven Health Passport
# Located at /etc/nginx/conf.d/haven-health-passport.conf

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name havenhealthpassport.org www.havenhealthpassport.org;

    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name havenhealthpassport.org;

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/ssl/haven-health-passport.crt;
    ssl_certificate_key /etc/nginx/ssl/haven-health-passport.key;
    ssl_trusted_certificate /etc/nginx/ssl/haven-health-passport-chain.crt;

    # Enable OCSP Must-Staple
    ssl_stapling on;
    ssl_stapling_verify on;

    # Root directory
    root /var/www/haven-health-passport;
    index index.html;

    # Security headers with CSP
    set $csp_nonce $request_id;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-$csp_nonce' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.havenhealthpassport.org wss://api.havenhealthpassport.org; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests; block-all-mixed-content;" always;
    # API endpoints with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Add CSP nonce to proxied requests
        proxy_set_header X-CSP-Nonce $csp_nonce;
    }

    # Authentication endpoints with stricter rate limiting
    location /api/auth/ {
        limit_req zone=auth burst=5 nodelay;

        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files
    location / {
        try_files $uri $uri/ /index.html;
        expires 1h;
        add_header Cache-Control "public, immutable";
    }

    # Security.txt
    location /.well-known/security.txt {
        alias /var/www/haven-health-passport/security.txt;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
# Mutual TLS Server for Admin/Healthcare Provider Access
server {
    listen 8443 ssl http2;
    listen [::]:8443 ssl http2;
    server_name admin.havenhealthpassport.org;

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/ssl/haven-health-passport.crt;
    ssl_certificate_key /etc/nginx/ssl/haven-health-passport.key;

    # Mutual TLS Configuration
    ssl_client_certificate /etc/nginx/ssl/client-ca.crt;
    ssl_verify_client on;
    ssl_verify_depth 2;
    ssl_crl /etc/nginx/ssl/client-ca.crl;

    # Client certificate validation
    if ($ssl_client_verify != SUCCESS) {
        return 403;
    }

    # Extract client certificate information
    set $ssl_client_s_dn_cn "";
    if ($ssl_client_s_dn ~ /CN=([^/]+)/) {
        set $ssl_client_s_dn_cn $1;
    }

    # Admin API endpoints
    location /admin/api/ {
        # Additional authorization based on client certificate
        if ($ssl_client_s_dn_cn !~ ^(admin|healthcare-provider)\..*) {
            return 403;
        }

        proxy_pass http://admin-backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Client-Certificate-CN $ssl_client_s_dn_cn;
        proxy_set_header X-Client-Certificate-Serial $ssl_client_serial;
        proxy_set_header X-Client-Certificate-Verify $ssl_client_verify;
    }

    # Admin UI
    location / {
        root /var/www/haven-admin;
        try_files $uri $uri/ /index.html;
    }
}

# Backend upstream servers
upstream backend {
    least_conn;
    server backend1:3000 max_fails=3 fail_timeout=30s;
    server backend2:3000 max_fails=3 fail_timeout=30s;
    server backend3:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream admin-backend {
    server admin-backend:3001 max_fails=3 fail_timeout=30s;
    keepalive 16;
}
